<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Wait" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="97" y="0"><bitmap>media/images/box/wait.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" /><Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" /><Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" /><Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" /></Box><Box name="Head" id="2" localization="8" tooltip="" x="364" y="0"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="50" start_frame="1" end_frame="-1" size="248"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="12" value="-3.53254" /><Key frame="42" value="-26.3003" /><Key frame="81" value="6.43746" /><Key frame="113" value="35.7942" /><Key frame="150" value="2.30219" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="12" value="0" /><Key frame="152" value="-6.01175" /><Key frame="177" value="33.4349" /><Key frame="211" value="-34.9213" /><Key frame="248" value="7.19746" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Hands" id="3" localization="8" tooltip="" x="229" y="0"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="199"><ActuatorList model=""><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="30" value="-21.8848" /><Key frame="58" value="-21.3" /><Key frame="149" value="3.95508" /><Key frame="199" value="-2.41055" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="30" value="0" /><Key frame="149" value="0" /><Key frame="199" value="0" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="30" value="11.3379" /><Key frame="149" value="-0.439454" /><Key frame="199" value="-0.518318" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="32" value="-22.2342" /><Key frame="80" value="-30.8476" /><Key frame="114" value="-53.3479" /><Key frame="151" value="-47.547" /><Key frame="176" value="-80" /><Key frame="197" value="-24.0799" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="32" value="-113.207" /><Key frame="58" value="-50" /><Key frame="80" value="-98.7048" /><Key frame="114" value="-74.9741" /><Key frame="151" value="-75.0619" /><Key frame="197" value="-66.5364" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="80" value="0.598182" /><Key frame="114" value="0.872727" /><Key frame="151" value="0.875296" /><Key frame="197" value="0.3008" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="32" value="83.1432" /><Key frame="80" value="-35.7743" /><Key frame="114" value="-39.29" /><Key frame="151" value="-40.6963" /><Key frame="197" value="86.3952" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="32" value="19.5975" /><Key frame="58" value="58" /><Key frame="80" value="33.8359" /><Key frame="114" value="18.367" /><Key frame="151" value="16.1697" /><Key frame="197" value="4.83164" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="80" value="-15" /><Key frame="114" value="-58" /><Key frame="151" value="-66" /><Key frame="176" value="-66" /><Key frame="197" value="7.3805" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="30" value="25.7547" /><Key frame="78" value="28.3914" /><Key frame="112" value="50.0128" /><Key frame="149" value="40.3447" /><Key frame="174" value="78" /><Key frame="195" value="25.0515" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="30" value="119.496" /><Key frame="56" value="43" /><Key frame="78" value="79.4517" /><Key frame="112" value="69.8715" /><Key frame="149" value="70.311" /><Key frame="195" value="66.1801" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="78" value="0.650909" /><Key frame="112" value="0.854545" /><Key frame="149" value="0.852024" /><Key frame="195" value="0.3016" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="30" value="82.0054" /><Key frame="78" value="-40.4278" /><Key frame="112" value="-40.6915" /><Key frame="149" value="-46.3165" /><Key frame="195" value="87.4547" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="30" value="-20.7449" /><Key frame="56" value="-66" /><Key frame="78" value="-42.7178" /><Key frame="112" value="-18.4597" /><Key frame="149" value="-15.1198" /><Key frame="195" value="-4.66067" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="78" value="25" /><Key frame="112" value="58" /><Key frame="149" value="57.8303" /><Key frame="174" value="64" /><Key frame="195" value="9.92936" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /><Resource name="Left eye leds" type="Lock" timeout="1" /><Resource name="Right eye leds" type="Lock" timeout="1" /><Resource name="Speakers" type="Lock" timeout="1" /></Box><Box name="Happy" id="12" localization="8" tooltip="ID : #02A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Happy" x="485" y="0"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="87"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-15" /><Key frame="23" value="-8.48092" /><Key frame="27" value="-12.3871" /><Key frame="31" value="-10.217" /><Key frame="36" value="-15" /><Key frame="40" value="-8.26391" /><Key frame="44" value="-12.1701" /><Key frame="48" value="-10" /><Key frame="54" value="-15" /><Key frame="58" value="-8.26391" /><Key frame="62" value="-12.1701" /><Key frame="66" value="-10" /><Key frame="71" value="-15" /><Key frame="75" value="-10.676" /><Key frame="87" value="-11.5137" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="15" value="-0.615236" /><Key frame="24" value="2" /><Key frame="40" value="-2" /><Key frame="58" value="2" /><Key frame="74" value="-2" /><Key frame="87" value="-0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-10.1" /><Key frame="84" value="-2.02149" /><Key frame="87" value="-1.84571" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="5" /><Key frame="36" value="-5" /><Key frame="54" value="5" /><Key frame="71" value="-5" /><Key frame="84" value="-0.0878909" /><Key frame="87" value="0.175782" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="3.5" /><Key frame="84" value="-0.175782" /><Key frame="87" value="0.351564" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-53" /><Key frame="28" value="-38.4" /><Key frame="36" value="-61.1" /><Key frame="45" value="-38.4" /><Key frame="54" value="-53" /><Key frame="63" value="-38.4" /><Key frame="71" value="-61.1" /><Key frame="79" value="-38.4" /><Key frame="87" value="-29.9707" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-63.5" /><Key frame="36" value="-100.538" /><Key frame="54" value="-63.5" /><Key frame="71" value="-100.538" /><Key frame="87" value="-70.4883" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" alwaysVisible="1" unit="1"><Key frame="20" value="0.020089" /><Key frame="28" value="0.34" /><Key frame="36" value="0.173538" /><Key frame="45" value="0.34" /><Key frame="54" value="0.020089" /><Key frame="63" value="0.34" /><Key frame="71" value="0.173538" /><Key frame="79" value="0.34" /><Key frame="87" value="0.582601" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="75.4" /><Key frame="36" value="101.5" /><Key frame="54" value="75.4" /><Key frame="71" value="101.5" /><Key frame="87" value="89.3848" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="14.8" /><Key frame="36" value="14.4" /><Key frame="54" value="14.8" /><Key frame="71" value="14.4" /><Key frame="87" value="8.17382" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-6.39955" /><Key frame="36" value="0.723418" /><Key frame="54" value="-6.39955" /><Key frame="71" value="0.723418" /><Key frame="87" value="0.876518" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="61.1" /><Key frame="28" value="39.8" /><Key frame="36" value="53" /><Key frame="45" value="39.8" /><Key frame="54" value="61.1" /><Key frame="63" value="39.8" /><Key frame="71" value="53" /><Key frame="79" value="39.8" /><Key frame="87" value="29.9707" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="100.538" /><Key frame="36" value="63.5" /><Key frame="54" value="100.538" /><Key frame="71" value="63.5" /><Key frame="87" value="70.1367" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" alwaysVisible="1" unit="1"><Key frame="20" value="0.173538" /><Key frame="28" value="0.29" /><Key frame="36" value="0.020089" /><Key frame="45" value="0.29" /><Key frame="54" value="0.173538" /><Key frame="63" value="0.29" /><Key frame="71" value="0.020089" /><Key frame="79" value="0.29" /><Key frame="87" value="0.585237" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="101.5" /><Key frame="36" value="75.4" /><Key frame="54" value="101.5" /><Key frame="71" value="75.4" /><Key frame="87" value="89.1211" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-14.4" /><Key frame="36" value="-14.8" /><Key frame="54" value="-14.4" /><Key frame="71" value="-14.8" /><Key frame="87" value="-8.34961" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" alwaysVisible="1" unit="0"><Key frame="20" value="-0.723418" /><Key frame="36" value="6.39955" /><Key frame="54" value="-0.723418" /><Key frame="71" value="6.39955" /><Key frame="87" value="0.788627" /></ActuatorCurve></ActuatorList></Timeline><Resource name="Standing" type="Lock" timeout="1" /><Resource name="All motors" type="Lock" timeout="1" /></Box><Box name="Say" id="5" localization="8" tooltip="" x="97" y="112"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import paho.mqtt.publish as publish


class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.topic = "pepper/textToSpeech"
        self.broker_address="192.168.1.101"


    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        publish.single(self.topic, "Powtarzajcie za mną! Pokażcie, jak się ruszacie! Wspaniale!", hostname=self.broker_address)
        self.onStopped()
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Say (1)" id="1" localization="8" tooltip="" x="483" y="113"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[import paho.mqtt.publish as publish


class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.topic = "pepper/textToSpeech"
        self.broker_address="192.168.1.101"


    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        publish.single(self.topic, "Chcielibyście ze mną zatańczyć? Pokażę wam kilka moich ruchów", hostname=self.broker_address)
        self.onStopped()
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" /><Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" /><Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>